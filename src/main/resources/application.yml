spring:
  thymeleaf:
    cache: false
  security:
    oauth2:
      client:
        registration:
          okta:
            client-id: 0oaj02emafDBjcFpM0h7
            client-secret: l-WC7l9ySU-NA6PFHB4o1jM8kt5gYc1ZNyRQMHvK
        provider:
          okta:
            issuer-uri: https://dev-718075.oktapreview.com/oauth2/default
            authorization-uri: https://dev-718075.oktapreview.com/oauth2/default/v1/authorize
            token-uri: https://dev-718075.oktapreview.com/oauth2/default/v1/token
            user-info-uri: https://dev-718075.oktapreview.com/oauth2/default/v1/userinfo
            jwk-set-uri: https://dev-718075.oktapreview.com/oauth2/default/v1/keys

#    issuer: https://dev-718075.oktapreview.com/oauth2/default
#    clientId: 0oaj02emafDBjcFpM0h7
#    clientSecret: l-WC7l9ySU-NA6PFHB4o1jM8kt5gYc1ZNyRQMHvK

#https://github.com/oktadeveloper/okta-spring-security-roles-example/blob/master/src/main/resources/application.yml.sample

#logging:
#  level:
#    root: INFO
#    org.springframework.web: INFO
#    org.springframework.security: INFO
#    com.okta.okta.spring.example.interceptor: DEBUG
#server:
#  port: 8080
#  servlet:
#    session:
#      tracking-modes: cookie
#okta:
#  client:
#    orgUrl: <your okta tenant>
#  oauth2:
#    issuer: https://<your okta tenant>/oauth2/<authorization server id>
#    audience: <audience defined in authorization server>
#    clientId: <oidc application client id>
#    clientSecret: <oidc application client secret>
#    rolesClaim: groups
#    redirectUri: /authorization-code/callback
#security:
#  oauth2:
#    client:
#      userAuthorizationUri: http://localhost:${server.port}/login


#spring:
#  security:
#    oauth2:
#      client:
#        provider:
#          okta:
#            issuer-uri: https://dev-718075.oktapreview.com/oauth2/default
#        registration:
#          okta:
#            client-id: {clientId}
#            client-secret: {clientSecret}